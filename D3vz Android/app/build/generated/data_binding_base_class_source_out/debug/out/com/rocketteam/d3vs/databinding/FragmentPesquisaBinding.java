// Generated by view binder compiler. Do not edit!
package com.rocketteam.d3vs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rocketteam.d3vs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPesquisaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout layoutRecycler;

  @NonNull
  public final RecyclerView recyclerViewTutores;

  @NonNull
  public final TextView textView;

  @NonNull
  public final Toolbar toolbar;

  private FragmentPesquisaBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout layoutRecycler, @NonNull RecyclerView recyclerViewTutores,
      @NonNull TextView textView, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.layoutRecycler = layoutRecycler;
    this.recyclerViewTutores = recyclerViewTutores;
    this.textView = textView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPesquisaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPesquisaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pesquisa, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPesquisaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_recycler;
      ConstraintLayout layoutRecycler = ViewBindings.findChildViewById(rootView, id);
      if (layoutRecycler == null) {
        break missingId;
      }

      id = R.id.recyclerView_tutores;
      RecyclerView recyclerViewTutores = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTutores == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentPesquisaBinding((ConstraintLayout) rootView, layoutRecycler,
          recyclerViewTutores, textView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
