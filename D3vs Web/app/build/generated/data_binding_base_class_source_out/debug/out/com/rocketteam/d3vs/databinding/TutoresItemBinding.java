// Generated by view binder compiler. Do not edit!
package com.rocketteam.d3vs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rocketteam.d3vs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TutoresItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView FotoTutor;

  @NonNull
  public final TextView desTutor;

  @NonNull
  public final TextView dsLinguagem;

  @NonNull
  public final TextView dsnivel;

  @NonNull
  public final TextView nmTutor;

  private TutoresItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView FotoTutor,
      @NonNull TextView desTutor, @NonNull TextView dsLinguagem, @NonNull TextView dsnivel,
      @NonNull TextView nmTutor) {
    this.rootView = rootView;
    this.FotoTutor = FotoTutor;
    this.desTutor = desTutor;
    this.dsLinguagem = dsLinguagem;
    this.dsnivel = dsnivel;
    this.nmTutor = nmTutor;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TutoresItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TutoresItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tutores_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TutoresItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FotoTutor;
      ImageView FotoTutor = ViewBindings.findChildViewById(rootView, id);
      if (FotoTutor == null) {
        break missingId;
      }

      id = R.id.des_tutor;
      TextView desTutor = ViewBindings.findChildViewById(rootView, id);
      if (desTutor == null) {
        break missingId;
      }

      id = R.id.ds_linguagem;
      TextView dsLinguagem = ViewBindings.findChildViewById(rootView, id);
      if (dsLinguagem == null) {
        break missingId;
      }

      id = R.id.dsnivel;
      TextView dsnivel = ViewBindings.findChildViewById(rootView, id);
      if (dsnivel == null) {
        break missingId;
      }

      id = R.id.nm_tutor;
      TextView nmTutor = ViewBindings.findChildViewById(rootView, id);
      if (nmTutor == null) {
        break missingId;
      }

      return new TutoresItemBinding((ConstraintLayout) rootView, FotoTutor, desTutor, dsLinguagem,
          dsnivel, nmTutor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
